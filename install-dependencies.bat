@echo off
chcp 65001 >nul
setlocal enabledelayedexpansion

REM Script c√†i ƒë·∫∑t dependencies cho d·ª± √°n Children Care Frontend (Windows)
REM H·ªó tr·ª£ c·∫£ npm v√† yarn

echo ===================================
echo Children Care Frontend - Setup Script
echo ===================================
echo.

REM Ki·ªÉm tra Node.js
where node >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Node.js ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t!
    echo Vui l√≤ng c√†i ƒë·∫∑t Node.js t·ª´: https://nodejs.org/
    pause
    exit /b 1
)

for /f "tokens=*" %%i in ('node --version') do set NODE_VERSION=%%i
echo ‚úÖ Node.js version: %NODE_VERSION%

REM Ki·ªÉm tra npm
where npm >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå npm ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t!
    pause
    exit /b 1
)

for /f "tokens=*" %%i in ('npm --version') do set NPM_VERSION=%%i
echo ‚úÖ npm version: %NPM_VERSION%

REM Ki·ªÉm tra yarn (t√πy ch·ªçn)
where yarn >nul 2>&1
if %errorlevel% equ 0 (
    for /f "tokens=*" %%i in ('yarn --version') do set YARN_VERSION=%%i
    echo ‚úÖ yarn version: !YARN_VERSION!
    set YARN_AVAILABLE=true
) else (
    echo ‚ö†Ô∏è  yarn ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t (t√πy ch·ªçn)
    set YARN_AVAILABLE=false
)

echo.

REM Ch·ªçn package manager
if "%YARN_AVAILABLE%"=="true" (
    echo Ch·ªçn package manager:
    echo 1^) npm (m·∫∑c ƒë·ªãnh)
    echo 2^) yarn
    echo.
    set /p choice="Nh·∫≠p l·ª±a ch·ªçn (1-2) [1]: "
    
    if "!choice!"=="" set choice=1
    if "!choice!"=="2" (
        set PACKAGE_MANAGER=yarn
        set INSTALL_CMD=yarn install
    ) else (
        set PACKAGE_MANAGER=npm
        set INSTALL_CMD=npm install
    )
) else (
    set PACKAGE_MANAGER=npm
    set INSTALL_CMD=npm install
)

echo üì¶ S·ª≠ d·ª•ng package manager: %PACKAGE_MANAGER%
echo.

REM Ki·ªÉm tra file package.json
if not exist "package.json" (
    echo ‚ùå Kh√¥ng t√¨m th·∫•y file package.json!
    echo Vui l√≤ng ch·∫°y script n√†y t·ª´ th∆∞ m·ª•c g·ªëc c·ªßa d·ª± √°n
    pause
    exit /b 1
)

echo ‚úÖ T√¨m th·∫•y file package.json

REM X√≥a node_modules v√† package-lock.json/yarn.lock c≈© (n·∫øu c√≥)
echo üßπ D·ªçn d·∫πp c√°c file c≈©...

if exist "node_modules" (
    echo X√≥a th∆∞ m·ª•c node_modules c≈©...
    rmdir /s /q "node_modules"
)

if "%PACKAGE_MANAGER%"=="npm" (
    if exist "yarn.lock" (
        echo X√≥a yarn.lock (s·ª≠ d·ª•ng npm)...
        del /f "yarn.lock"
    )
) else (
    if exist "package-lock.json" (
        echo X√≥a package-lock.json (s·ª≠ d·ª•ng yarn)...
        del /f "package-lock.json"
    )
)

REM C√†i ƒë·∫∑t dependencies
echo üì¶ C√†i ƒë·∫∑t dependencies...
echo Ch·∫°y l·ªánh: %INSTALL_CMD%
echo.

%INSTALL_CMD%
if %errorlevel% neq 0 (
    echo ‚ùå L·ªói khi c√†i ƒë·∫∑t dependencies!
    pause
    exit /b 1
)

echo ‚úÖ C√†i ƒë·∫∑t dependencies th√†nh c√¥ng!
echo.

REM Ki·ªÉm tra c√°c dependency quan tr·ªçng
echo üîç Ki·ªÉm tra c√°c dependency quan tr·ªçng...

set DEPS=next react react-dom typescript tailwindcss

for %%d in (%DEPS%) do (
    if "%PACKAGE_MANAGER%"=="npm" (
        npm list %%d >nul 2>&1
        if !errorlevel! equ 0 (
            echo ‚úÖ %%d
        ) else (
            echo ‚ùå %%d kh√¥ng ƒë∆∞·ª£c c√†i ƒë·∫∑t
        )
    ) else (
        yarn list --pattern %%d >nul 2>&1
        if !errorlevel! equ 0 (
            echo ‚úÖ %%d
        ) else (
            echo ‚ùå %%d kh√¥ng ƒë∆∞·ª£c c√†i ƒë·∫∑t
        )
    )
)

echo.

REM Hi·ªÉn th·ªã th√¥ng tin v·ªÅ c√°c script c√≥ s·∫µn
echo üìã C√°c l·ªánh c√≥ s·∫µn:
echo   ‚Ä¢ %PACKAGE_MANAGER% run dev    - Ch·∫°y development server
echo   ‚Ä¢ %PACKAGE_MANAGER% run build  - Build production
echo   ‚Ä¢ %PACKAGE_MANAGER% run start  - Ch·∫°y production server
echo   ‚Ä¢ %PACKAGE_MANAGER% run lint   - Ki·ªÉm tra code style

echo.

REM H∆∞·ªõng d·∫´n ti·∫øp theo
echo üéâ C√†i ƒë·∫∑t ho√†n t·∫•t!
echo B∆∞·ªõc ti·∫øp theo:
echo 1. Ch·∫°y: %PACKAGE_MANAGER% run dev
echo 2. M·ªü tr√¨nh duy·ªát t·∫°i: http://localhost:3000

echo.
echo ===================================
echo Happy coding! üöÄ
echo ===================================

pause 